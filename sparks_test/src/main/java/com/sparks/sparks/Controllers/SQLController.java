package com.sparks.sparks.Controllers;

import java.util.HashMap;
import java.util.Set;

import com.sparks.sparks.Entities.Precinct;
import com.sparks.sparks.Enums.PoliticalGroups;
import com.sparks.sparks.Repositories.PrecinctRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
@CrossOrigin(origins = "*")
// @RequestMapping(path="/demo")   // all request paths start with /demo
public class SQLController {
    @Autowired // get the Bean called precinctRepository which is auto-generated by Spring
    private PrecinctRepository precinctRepository;

    @PostMapping(path="/add") // map only POST requests
    public @ResponseBody String addNewPrecinct (@RequestParam HashMap<PoliticalGroups, Integer> demographicData,
    @RequestParam String geoJsonData, @RequestParam Set<Long> neighborIds) {
        Precinct p = new Precinct();
        p.setDemographicData(demographicData);
        p.setGeoJsonData(geoJsonData);
        p.setNeighborIds(neighborIds);

        precinctRepository.save(p);
        return "Saved";
    }

    @PostMapping(path="/addblank") // map only POST requests
    public @ResponseBody String addBlankPrecinct (@RequestParam HashMap<PoliticalGroups, Integer> demographicData,
    @RequestParam String geoJsonData, @RequestParam Set<Long> neighborIds) {
        Precinct p = new Precinct();
        precinctRepository.save(p);
        return "Saved Blank";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Precinct> getAllPrecincts() {
        return precinctRepository.findAll();
    }
}
